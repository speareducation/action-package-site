---
name: "Package Spear Site"
author: "Kenzi Stewart <kstewart@speareducation.com>"
description: "Packages a site into a deployable docker image"
inputs:
  aws-access-key-id:
    description: Amazon Access Key with permission to modify the ECR repository
    required: true
  aws-secret-access-key:
    description: Amazon Secret Access Key
    required: true
  aws-session-token:
    description: AWS Session token (if applicable)
    required: false
  aws-region:
    description: Region of AWS ECR repository
    required: false
    default: us-east-1
  ecr-registry:
    description: 12-digit ID of ECR registry
    required: true
  ecr-repo:
    description: Name of ECR repository to act upon
    required: true
  git-ref:
    description: Git Ref to build
    required: true
  node-auth-token:
    description: Auth token for node packages
    required: true
runs:
  using: "composite"
  steps:
    - name: Package site
      shell: bash
      run: |
        set -ex
        set -a
        . .buildconfig
        set +a
        AWS_SESSION_TOKEN="${{ inputs.aws-session-token }}"
        BUILD_ARG_AWS_TOKEN=
        if [[ -n ${AWS_SESSION_TOKEN} ]]; then
          BUILD_ARG_AWS_TOKEN="--build-arg AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}"
        fi
        TARGET_IMAGE_VERSION=$(echo "${{ inputs.git-ref }}" | sed -e 's%refs/tags/%%g' -e "s%^v%%g" -e "s%refs/heads/%%g" -e "s%features/%%g" -e "s%releases/%%g" -e "s%/%-%g")
        DOCKERFILE_CONTENTS=""
        echo ${DOCKERFILE_CONTENTS} | base64 -d > ./Dockerfile
        docker build -f /github/actions/action-package-site/Dockerfile \
          --build-arg AWS_ACCESS_KEY_ID="${{ inputs.aws-access-key-id }}" \
          --build-arg AWS_SECRET_ACCESS_KEY="${{ inputs.aws-secret-access-key }}" \
          ${BUILD_ARG_AWS_TOKEN} \
          --build-arg GIT_BRANCH="${TARGET_IMAGE_VERSION}" \
          --build-arg GIT_REPOSITORY="${{ env.GITHUB_REPOSITORY }}" \
          --build-arg ARTIFACT="${{ inputs.ecr-repo }}" \
          --build-arg DOCKER_REGISTRY="${{ inputs.ecr-registry }}" \
          --build-arg DOCKER_BASE_IMAGE="${{ inputs.ecr-registry }}/${DOCKER_BASE_IMAGE_NAME}:${DOCKER_BASE_IMAGE_VER}" \
          --build-arg NODE_AUTH_TOKEN="${{ inputs.node-auth-token }}" \
          -t "${{ inputs.ecr-registry }}/${{ inputs.ecr-repo }}:${TARGET_IMAGE_VERSION}" .
    - name: Test Release Artifact
      shell: bash
      run: |
        set -ex
        TARGET_IMAGE_VERSION=$(echo "${{ inputs.git-ref }}" | sed -e 's%refs/tags/%%g' -e "s%^v%%g" -e "s%refs/heads/%%g" -e "s%features/%%g" -e "s%releases/%%g" -e "s%/%-%g")
        DOCKER_IMAGE_TAG="${{ inputs.ecr-registry }}/${{ inputs.ecr-repo }}:${TARGET_IMAGE_VERSION}"
        TEST_CONFIG_FILE=./test.config.yml
        TEST_CONFIG_CONTENTS="dGVzdHM6CiAgeGRlYnVnX2VuYWJsZWQ6CiAgICBkZXNjcmlwdGlvbjogVmVyaWZ5IHRoYXQgUEhQX0RFQlVHPTEgeWllbGRzIHRoZSB4ZGVidWcgbW9kdWxlIGJlaW5nIGVuYWJsZWQuCiAgICBlbnZpcm9ubWVudDoKICAgICAgUEhQX0RFQlVHOiAxCiAgICAgIEFQUF9FTlY6ICJkZXZlbG9wbWVudCIKICAgIGdvc3NfY29uZmlnOgogICAgICBjb21tYW5kOgogICAgICAgIHBocCAtbSB8IGdyZXAgeGRlYnVnOgogICAgICAgICAgZXhpdC1zdGF0dXM6IDAKICAgICAgICAgIHN0ZG91dDoKICAgICAgICAgICAgLSAieGRlYnVnIgogICAgICAgICAgdGltZW91dDogMTAwMDAKICB4ZGVidWdfZGlzYWJsZWQ6CiAgICBkZXNjcmlwdGlvbjogVmVyaWZ5IHRoYXQgUEhQX0RFQlVHPTAgZGlzYWJsZXMgdGhlIHhkZWJ1ZyBtb2R1bGUuCiAgICBlbnZpcm9ubWVudDoKICAgICAgUEhQX0RFQlVHOiAwCiAgICAgIEFQUF9FTlY6ICJkZXZlbG9wbWVudCIKICAgIGdvc3NfY29uZmlnOgogICAgICBjb21tYW5kOgogICAgICAgIHBocCAtaSB8IGdyZXAgeGRlYnVnOgogICAgICAgICAgZXhpdC1zdGF0dXM6IDAKICAgICAgICAgIHN0ZG91dDoKICAgICAgICAgICAgLSAheGRlYnVnCiAgICAgICAgICB0aW1lb3V0OiAxMDAwMAogIG5ld3JlbGljX2VuYWJsZWQ6CiAgICBkZXNjcmlwdGlvbjogVmVyaWZ5IHRoYXQgcGFzc2luZyBhIGxpY2Vuc2Uga2V5IGFuZCBORVdSRUxJQ19FTkFCTEVEPTEgZW5hYmxlcyB0aGUgbmV3cmVsaWMgbW9kdWxlLgogICAgZW52aXJvbm1lbnQ6CiAgICAgIE5FV1JFTElDX0VOQUJMRUQ6IDEKICAgICAgTkVXUkVMSUNfTElDRU5TRV9LRVk6ICIxMjM0NTY3ODkwIgogICAgICBBUFBfRU5WOiAiZGV2ZWxvcG1lbnQiCiAgICBnb3NzX2NvbmZpZzoKICAgICAgY29tbWFuZDoKICAgICAgICBwaHAgLWk6CiAgICAgICAgICBleGl0LXN0YXR1czogMAogICAgICAgICAgc3Rkb3V0OgogICAgICAgICAgICAtIG5ld3JlbGljCiAgICAgICAgICB0aW1lb3V0OiAxMDAwMAogIG5ld3JlbGljX2Rpc2FibGVkOgogICAgZGVzY3JpcHRpb246IFZlcmlmeSB0aGF0IG5ld3JlbGljIGlzIGRpc2FibGVkIGJ5IGRlZmF1bHQuCiAgICBlbnZpcm9ubWVudDoKICAgICAgQVBQX0VOVjogImRldmVsb3BtZW50IgogICAgZ29zc19jb25maWc6CiAgICAgIGNvbW1hbmQ6CiAgICAgICAgcGhwIC1pOgogICAgICAgICAgZXhpdC1zdGF0dXM6IDAKICAgICAgICAgIHN0ZG91dDoKICAgICAgICAgICAgLSAhbmV3cmVsaWMKICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwCg=="
        echo ${TEST_CONFIG_CONTENTS} | base64 -d > "${TEST_CONFIG_FILE}"

        TEST_NAMES=$(yq -r '.tests | keys[]' < "${TEST_CONFIG_FILE}")
        DGOSS_BIN="./build/dgoss"
        mkdir -p build/goss
        wget -q -O"${BUILD_DIR}/goss-linux-amd64" https://github.com/aelsabbahy/goss/releases/download/v0.3.16/goss-linux-amd64
        wget -q -O"${BUILD_DIR}/dgoss" "https://raw.githubusercontent.com/aelsabbahy/goss/v0.3.16/extras/dgoss/dgoss"
        mkdir -p build
        for TEST_NAME in ${TEST_NAMES}; do
          DOCKER_ARGS=""
          echo "TEST: ${TEST_NAME}"
          echo -n "  "
          yq -r ".tests.${TEST_NAME}.description" < ${TEST_CONFIG_FILE}
          ENV_VARS=$(yq -r ".tests.${TEST_NAME}.environment | keys[]" < "${TEST_CONFIG_FILE}")
          for VAR_NAME in ${ENV_VARS}; do
            VAR_VALUE=$(yq -r ".tests.${TEST_NAME}.environment.${VAR_NAME}" < "${TEST_CONFIG_FILE}")
            DOCKER_ARGS+=" -e ${VAR_NAME}=${VAR_VALUE}"
          done
          yq -Y ".tests.${TEST_NAME}.goss_config" < "${TEST_CONFIG_FILE}" > "build/test-goss.${TEST_NAME}.yml"
          GOSS_FILE="build/test-goss.${TEST_NAME}.yml" ${DGOSS_BIN} run --rm -it ${DOCKER_ARGS} "${DOCKER_IMAGE_TAG}"
        done
    - name: Publish Artifact to ECR
      shell: bash
      run: |
        set -ex
        TARGET_IMAGE_VERSION=$(echo "${{ inputs.git-ref }}" | sed -e 's%refs/tags/%%g' -e "s%^v%%g" -e "s%refs/heads/%%g" -e "s%features/%%g" -e "s%releases/%%g" -e "s%/%-%g")
        docker push "${{ inputs.ecr-registry }}/${{ inputs.ecr-repo }}:${TARGET_IMAGE_VERSION}"
